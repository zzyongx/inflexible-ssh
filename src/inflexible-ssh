#!/usr/bin/perl

use strict;
use warnings;
use Errno qw(:POSIX);
use IO::Socket::INET;
use Data::Dumper;

my $opt = getopt();
usage() if ($opt->{h});

my %config;

my $listen = IO::Socket::INET->new(
  Listen    => 1024,
  LocalPort => $opt->{P},
  ReuseAddr => 1,
  Proto     => 'tcp',
);

if (!$listen) {
  print "setup listen port error $!";
  exit 1;
}

$SIG{CHLD} = 'IGNORE';
$| = 1;

while ((my $client = $listen->accept())) {
  my $pid = fork();
  if ($pid == 0) {
    receive($client);
    exit(0);
  }
}

sub receive {
  my $client = shift;
  my $cmdnam = <$client>;
  chomp($cmdnam);
  my $cmd = $config{$cmdnam};
  unless ($cmd) {
    $client->syswrite("unknow $cmdnam");
    close($client);
    return;
  }

  close(STDERR);
  close(STDOUT);
  open(STDOUT, ">&", $client->fileno);
  open(STDERR, ">&", $client->fileno);
  system($cmd);

  close($client);
}

sub parse_command {
  my $command = shift;
  chomp($command);


}

sub usage {
  my $error = shift;
  print $error, "\n" if ($error);

  print <<USAGE;
-h   "print this help"
-f   "config dir default /etc/inflexible-ssh"
-P   "listen port default 2222"
-l   "log file default /var/log/inflexible-ssh"
-p   "pid file default /var/run/inflexible-ssh.pid"
USAGE
  exit($error ? 1 : 0);
}

sub getopt {
  my %opt = (
    'h' => 0,
    'f' => '/etc/inflexible-ssh',
    'P' => 2222,
    'l' => '/var/log/inflexible-ssh',
    'p' => '/var/run/inflexible-ssh.pid',
  );

  my $key   = undef;
  foreach my $arg (@ARGV) {
    if ($arg =~ /^-(.+)/) {
      if (!defined($key) && exists $opt{$1}) {
        if ($1 eq 'h') {
          $opt{$1} = 1;
        } else {
          $key = $1;
        }
      } else {
        usage("unknow option $arg");
      }
    } elsif (defined($key)) {
      $opt{$key} = $arg;
      $key = undef;
    } else {
      usage("unknow option $arg");
    }
  }
  return \%opt;
}
